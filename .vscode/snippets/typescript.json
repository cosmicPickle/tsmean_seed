{
    "appRouteRequest": {
        "prefix": "appRouteRequest",
        "body": [
            "import {AppBaseBody, AppBaseQuery, AppBaseRequest} from './../../../core/models/routing/request/AppBaseRequest'",
            "",
            "export interface ${TM_FILENAME_BASE/(.*)(Request)$/$1/}Query extends AppBaseQuery {",
            "",
            "}",
            "",
            "export interface ${TM_FILENAME_BASE/(.*)(Request)$/$1/}Body extends AppBaseBody {",
            "",
            "}",
            "",
            "export interface ${TM_FILENAME_BASE} extends AppBaseRequest<${TM_FILENAME_BASE/(.*)(Request)$/$1/}Query, ${TM_FILENAME_BASE/(.*)(Request)$/$1/}Body> {",
            "",
            "}"
        ],
        "description": "Generates a RouteRequest File"
    },
    "appRouteRequestValidator": {
        "prefix": "appRouteRequestValidator",
        "body": [  
            "import {AppBaseRequestValidator, AppBaseQuerySchema, AppBaseBodySchema} from './../../../core/models/routing/request/AppBaseRequestValidator';",
            "import { AppMiddlewareFunction } from './../../../core/middlewares/AppMiddleware';",
            "import * as Joi from 'joi';",
            "",
            "export class ${TM_FILENAME_BASE/(.*)(RequestValidator)$/$1/}GetQuerySchema extends AppBaseQuerySchema {",
            "",
            "}",
            "",
            "export class ${TM_FILENAME_BASE/(.*)(RequestValidator)$/$1/}PostBodySchema extends AppBaseBodySchema {",
            "",
            "}",
            "",
            "export type ${TM_FILENAME_BASE/(.*)(RequestValidator)$/$1/}GetValidator = AppBaseRequestValidator<${TM_FILENAME_BASE/(.*)(RequestValidator)$/$1/}GetQuerySchema, AppBaseBodySchema>;",
            "",
            "export type ${TM_FILENAME_BASE/(.*)(RequestValidator)$/$1/}PostValidator = AppBaseRequestValidator<AppBaseQuerySchema, ${TM_FILENAME_BASE/(.*)(RequestValidator)$/$1/}PostBodySchema>;",
            "",
            "export let ${1: routeCamelCase }GetValidator = new AppBaseRequestValidator<${TM_FILENAME_BASE/(.*)(RequestValidator)$/$1/}GetQuerySchema, AppBaseBodySchema>(",
            "    new ${TM_FILENAME_BASE/(.*)(RequestValidator)$/$1/}GetQuerySchema(),",
            "    new AppBaseBodySchema()",
            ");",
            "",
            "export let ${2: routeCamelCase }PostValidator = new AppBaseRequestValidator<AppBaseQuerySchema, ${TM_FILENAME_BASE/(.*)(RequestValidator)$/$1/}PostBodySchema>(",
            "    new AppBaseQuerySchema(),",
            "    new ${TM_FILENAME_BASE/(.*)(RequestValidator)$/$1/}PostBodySchema()",
            ");"
        ],
        "description": "Generates a RouteRequestValidator File"
    },
    "appRouteValidatorMiddleware": {
        "prefix": "appRouteValidatorMiddleware",
        "body": [
            "import { AppMiddlewareFunction } from './../../../core/middlewares/AppMiddleware';",
            "import { Request, Response, NextFunction } from 'express';",
            "import { appRouteValidationError } from './../../../configuration/errors/errorsConfig';",
            "import { ${1: validators} } from './../../../models/routing/request/${TM_FILENAME_BASE/(.*)(ValidatorMiddleware)$/$1/}RequestValidator';",
            "import * as Joi from 'joi';",
            "",
            "export class ${TM_FILENAME_BASE} {",
            "    private getValidator: ${2: validatorType } = ${3: AppBaseRequestValidatorObject };",
            "    get: AppMiddlewareFunction = async (req: Request, res: Response, next: NextFunction) => { ",
            "       try {",
            "            await this.getValidator.validateQuery(req.query);",
            "            next();",
            "        } catch(e) {",
            "            res.json(appRouteValidationError.parse(e as Joi.ValidationError).get());",
            "        }",
            "    }",
            "}",
            "",
            "export let ${4: middlewareNameCamelCase} = new ${TM_FILENAME_BASE}();"
        ],
        "description": "Generates a appRouteValidatorMiddleware File"
    }
}